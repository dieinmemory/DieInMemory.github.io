<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Gentoo 安装手记]]></title>
    <url>%2F2019%2F07%2F06%2FGentoo-%E5%AE%89%E8%A3%85%E6%89%8B%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[兔兔的领养过程 准备工作开局ifconfig 检查网卡型号ifconfig 开启网卡ifconfig wlp1s0 up 配置无线网络假设WiFi名是test 密码是123456 则 wpa_passphrase test &quot;123456&quot; &gt; /etc/wpa_supplicant.conf -B是后台 wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant.conf 自动分配ipdhcpcd ping一下网络正常后 ，开始分区bios + mbr 推荐使用fdiskn 是创建 d 是删除 a 是设置boot引导 t 是设置分区类型 82 是swap 分完后 /sdb1/sdb2 ext2 /boot/sdb3 no swap/sdb4 ext4 /​ 创建文件系统-j 启动日志, -T small 增加计算出的inode数量. mkfs.ext2 -T small /dev/sdb2 mkfs.ext4 -j /dev/sdb4 ==要使引导分区(/dev/sdb2)在ext2和根分区(/dev/sdb4)在ext4中，只需要在创建文件系统时 选no== 初始化交换分区mkswap /dev/sdb3 激活交换swapon /dev/sdb3 挂载分区mount /dev/sdb4 /mnt/gentoomkdir /mnt/gentoo/bootmount /dev/sdb2 /mnt/gentoo/boot 安装stage3校正时间date // 查看时间 如果不对，则有两种方法a)ntpd -q -g // 自动更新时间 ，相当于同步时间b)date 090113162018 // 手动更新：将日期定在2018年9月1日13点16分 解压安装stage包cd /mnt/cdrom // 首先找到下载在U盘里的stage3包cp ./stage3-*.tar.bz2 ../gentoo// 然后复制到根目录cd /mnt/gentoo tar xvjpf stage3-*.tar.bz2// 回到根目录，并解压stage3 如果出错可以去掉j 编辑编译配置文件vi /mnt/gentoo/etc/portage/make.conf MAKEOPTS=&quot;-j3&quot;// 在文件中添加此行，-j后面的数字 一般是核心数+1 选择镜像mirrorselect -i -o &gt;&gt; /mnt/gentoo/etc/portage/make.conf// 方向键移动上下 空格键选中 回车确定设置 配置gentoo主仓库mkdir /mnt/gentoo/etc/portage/repos.conf//如果没有此目录则创建cp /mnt/gentoo/usr/share/portage/config/repos.conf /mnt/gentoo/etc/portage/repos.conf/gentoo.conf// 复制Portage提供的Gentoo仓库配置文件到这个（新创建的）目录 复制dns信息确保进入新环境后网络依然可用 cp -L /etc/resolv.conf /mnt/gentoo/etc/ 挂载必要的文件系统mount -t proc proc /mnt/gentoo/proc// 一个pseudo文件系统（看起来像是常规文件，事实上却是实时生成的），由Linux内核提供的一些环境信息 mount --rbind /sys /mnt/gentoo/sysmount --make-rslave /mnt/gentoo/sys// 一个pseudo文件系统，像要被取代的/proc/一样，比/proc/更加有结构mount --rbind /dev /mnt/gentoo/devmount --make-rslave /mnt/gentoo/dev// 一个包含全部设备文件的常规文件系统，一部分由Linux设备管理器（通常是udev管理） 进入新环境chroot /mnt/gentoo /bin/bash// 使用chroot将根位置从/（u盘启动系统）更改成/mnt/gentoo/，就是进入刚刚我们布局的分区和挂载 source /etc/profile// 使用source命令将一些设置（那些在/etc/profile中的）重新载入到内存中export PS1=&quot;(chroot) $PS1&quot;// 更改主提示符来帮助我们记住当前会话在一个chroot环境里面（可选） 安装时，如果在这之后的任何一个步骤中断，都可以从这一步继续安装，不必从头再来 只需要挂载分区 然后复制dns重新进入即可首先挂载根目录mount /dev/sdb4 /mnt/gentoo 复制dns信息cp -L /etc/resolv.conf /mnt/gentoo/etc/// 若之前复制过，提示是否覆盖，回车确定即可 挂载必要的文件系统mount -t proc proc /mnt/gentoo/procmount --rbind /sys /mnt/gentoo/sysmount --make-rslave /mnt/gentoo/sysmount --rbind /dev /mnt/gentoo/devmount --make-rslave /mnt/gentoo/dev 重新进入新环境chroot /mnt/gentoo /bin/bashsource /etc/profileexport PS1=&quot;(chroot) $PS1&quot; 配置Portage获取ebuild 版本库(repository) 快照 有两种方式 a) 一般操作 emerge-webrsyncb）获取最新的（一小时之内的）的快照 emerge --sync// 使用rsync协议来更新 Gentoo ebuild 数据库（之前通过emerge-webrsync获得的）到最新状态 选择配置文件eselect profile list// 查看当前使用的配置文件和可选配置文件eselect profile set 1 // 选择配置文件 初始化选择环境emerge --ask --update --deep --newuse @world // atom530 大约是42min47s4 设定时区echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone 重新配置sys-libs/timezone-data包更新/etc/localtime文件/etc/localtime文件用于让系统的C类库知道系统在什么时区 emerge --config sys-libs/timezone-data 配置地区nano -w /etc/locale.gen en_US ISO-8859-1en_US.UTF-8 UTF-8zh_CN GBKzh_CN.UTF-8 UTF-8 // 在文中添加如上信息 验证当前可用地区locale -a 设定地区eselect locale set 8//选择en_US.utf8,不然后面的步骤中可能会出现乱码 比如：时间信息 如果上面无法应用en_US.utf8，还可以通过手动编辑文件来完成：/etc/env.d/02localeLANG=”en_US.utf8” 重新加载环境env-update &amp;&amp; source /etc/profile &amp;&amp; export PS1=&quot;(chroot) $PS1&quot; 自动选择一个合适的内核并使用emerge来安装它 emerge --ask sys-kernel/gentoo-sources ls -l /usr/src/linux// 可以看到已经在/usr/src/中安装Linux内核源码，并有一个符号连接叫作linux将指向安装的内核源码 编译安装内核a） 手动编译 b） 利用genkernel工具来全自动编译安装 下载安装genkernelemerge --ask sys-kernel/genkernel 编辑/etc/fstab文件来使包含有第二个值为/boot/的那条的第一个值指向到正确的设备 nano -w /etc/fstab 1/dev/sdb2 /boot ext2 defaults 0 2 编译内核源码genkernel all 此时如果提示找不到命令，说明安装失败，则进行下列步骤dispatch-conf//接着摁两下u ，命令执行完毕后，重新安装genkernel emerge --ask sys-kernel/genkernel 再次执行genkernel all 此时应该genkernel开始工作了，耐心等待 （13h编译完成后，查看一下ls /boot/kernel* /boot/initramfs* 安装固件emerge --ask sys-kernel/linux-firmware 编辑分区文件,挂载分区建议使用uuid 不会被混淆 查看uuidblkid /dev/sdb1 uuid= 294848f3-01 1234/dev/sdb1 uuid= 294848f3-01/dev/sdb2 uuid= &quot;b6e7b211-c209-4aa4-a238-a0df5ec51bdc&quot; ext4 PARTUUID = &quot;294848f3-02&quot;/dev/sdb3 uuid= &quot;deve0e57-db19-4e3a-a92b-960d9917b2e2&quot; swap PARTUUID =&quot; 294848f3-03&quot;/dev/sdb4 uuid= &quot;cfa8d625-cc0e-4c1a-9dd9-70e1f8055a08&quot; ext4 PARTUUID =&quot; 294848f3-04&quot; 编辑文件nano -w /etc/fstab//在文件中 添加挂载信息 每字段用两个tap隔开 1234/dev/sdb2 /boot ext2 defaults,noatime 0 2/dev/sdb3 none swap sw 0 0/dev/sdb4 / ext4 noatime 0 1/dev/cdrom /mnt/cdrom auto noatime,user 0 0 设置主机名nano -w /etc/conf.d/hostname hostname=”主机名” 安装PCMCIA(笔记本pci拓展坞)emerge --ask sys-apps/pcmciautils 设置root密码passwd 安装系统工具安装系统日志emerge --ask app-admin/sysklogd 加入到默认的运行级别rc-update add sysklogd default 安装守护进程emerge --ask sys-process/cronie 加入到默认的运行行列rc-update add cronie default 安装文件索引工具emerge --ask sys-apps/mlocate 自动开启远程服务sshrc-update add sshd default 安装网络工具emerge --ask net-misc/dhcpcd 安装pppoe客户端emerge --ask net-dialup/ppp 安装无线连接工具emerge --ask net-wireless/wireless-tools emerge --ask net-wireless/iw 安装wpa支持，让gentoo可连接wpa路由器emerge --ask net-wireless/wpa_supplicant 配置引导安装grub2emerge --ask --verbose sys-boot/grub:2 把引导安装到硬盘上a) BIOSgrub-install /dev/sdb b) UEFI在运行grub-install之前，确保已经安装了EFI系统分区GRUB. -install可以将GRUB EFI文件(grubx64.efi)安装到错误的目录中,不提供使用错误目录的任何指示. grub-install --target=x86_64-efi --efi-directory=/boot ** 将–aix-directory选项修改为EFI系统分区的根，如果/boot分区没有格式化为FAT分区，那么这是必要的.** 如果GRUB安装是出现错误，如Could not prepare Boot variable: Read-only file system，可能需要将efivars挂载为读写，这样才能成功：// 如果GRUB安装是出现错误，如Could not prepare Boot variable: Read-only file system可能需要将efivars挂载为读写，这样才能成功：// 将–aix-directory选项修改为EFI系统分区的根，如果/boot分区没有格式化为FAT分区，那么这是必要的. mount -o remount,rw /sys/firmware/efi/efivars 一些主板制造商似乎只支持efi系统分区(ESP)中. efi文件的/efi/boot/目录位置， GRUB安装程序可以使用–removable选项自动执行此操作。在运行以下命令之前，请验证ESP是否已挂载。 假设ESP安装在/boot(如前面所建议的)，执行: grub-install --target=x86_64-efi --efi-directory=/boot --removable 这将创建UEFI规范定义的默认目录，然后复制grubx64。将efi文件设置为相同规范定义的“默认”efi文件位置。 生成最终grub2配置文件grub-mkconfig -o /boot/grub/grub.cfg]]></content>
      <tags>
        <tag>Gentoo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
